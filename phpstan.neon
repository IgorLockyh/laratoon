parameters:
	paths:
		- app
		- tests
	level: 7
	inferPrivatePropertyTypeFromConstructor: true
	checkMissingIterableValueType: false
	checkGenericClassInNonGenericObjectType: false
	reportUnmatchedIgnoredErrors: false
	excludePaths:
		- %currentWorkingDirectory%/app/Providers/*
	ignoreErrors:
		- '#Access to an undefined property App\\(Models|Http\\Resources)\\.*#'
		- '#Call to an undefined method App\\Http\\Resources\\.*#'
		- '#Method App\\(Models|Http\\Controllers)\\.* has no return type specified\.#'
		- '#Method App\\Models(\\[a-zA-Z]+)+::scope[a-zA-Z]+\(\) has parameter \$[a-zA-Z]+ with no type specified\.#'
		- '#Call to an undefined (static )?method Illuminate\\.*#'
		- '#Unable to resolve the template type (TKey|TValue) in call to function collect.*#'
		- '#Using nullsafe property access on non-nullable type mixed. Use -> instead\.#'
		- '#Call to an undefined static method App\\Models(\\[a-zA-Z]+)+::(orderBy(Desc)?|where(Has(Morph)?)?|update(OrCreate)?|(find(OrFail)?))\(\)\.#'
		- '#Call to protected method increment\(\) of class Illuminate\\Database\\Eloquent\\Model\.#'
		- '#Function [a-zA-Z]*\(\) should return Illuminate\\Database\\Eloquent\\Builder but returns Illuminate\\Database\\Query\\Builder\.#'
		- '#Parameter \#1 \$value of function collect expects Illuminate\\Contracts\\Support\\Arrayable<\(int\|string\), mixed>\|iterable<\(int\|string\), mixed>\|null, (string|int) given\.#'
		- '#Parameter \#1 \$callback of method Illuminate\\Database\\Eloquent\\Collection<\(int\|string\),Illuminate\\Database\\Eloquent\\Model>::map\(\) expects callable\(Illuminate\\Database\\Eloquent\\Model, \(int\|string\)\): App\\Models(\\[a-zA-Z]+)+\|null, Closure\(App\\Models\\Contracts\\Has([a-zA-Z]+)+\): App\\Models(\\[a-zA-Z]+)+\|null given\.#'
		- '#^Method Tests(\\[a-zA-Z]+)+\:\:[a-zA-Z]+\(\) should return App\\Models(\\[a-zA-Z]+)+ but returns Illuminate\\Database\\Eloquent\\Collection\<int, Illuminate\\Database\\Eloquent\\Model\>\|Illuminate\\Database\\Eloquent\\Model\.$#'
		- '#^Match expression does not handle remaining value\: class\-string&literal\-string$#'